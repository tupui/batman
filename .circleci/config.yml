version: 2.1

orbs:
  python: circleci/python@volatile

executors:
  my-executor:
    docker:
      - image: circleci/python:latest
    working_directory: ~/batman

workflows:
  main:
    jobs:
      - dependencies
      - linter:
          requires:
            - dependencies
      - test:
          requires:
            - dependencies

jobs:
  dependencies:
    executor: my-executor
    steps:
      - checkout
#      - python/load-cache
      - python/install-deps
      - python/save-cache

  linter:
    executor: my-executor
    steps:
      - checkout
      - python/load-cache
      - run:
          command: |
            pycodestyle --max-line-length=120 --exclude=function*,TreeCut*,RBFnet* batman > pycodestyle.log || echo 0
            cat pycodestyle.log
            pylint batman --rcfile=setup.cfg --ignore-patterns='RBFnet.py','TreeCut.py' > linter.log || echo 0
            cat linter.log
            lint=`cat linter.log`
            regex='at ([0-9][-.][0-9]{2})[-/]10'
            lint_res=`[[ $lint =~ $regex ]] && echo "${BASH_REMATCH[1]}"`
            if [[ "$lint_res" > "9.4" ]]; then exit 0; else exit 1; fi

  test:
    parallelism: 4
    executor: my-executor
    steps:
      - checkout
      - python/load-cache
      - run:
          name: Test
          command: bash .github/continuous_integration/CI.sh
          environment:
            # matplotlb backend to non-interactive
            MPLBACKEND: "Agg"

      - store_artifacts:
          path: test-reports
          destination: test-reports
